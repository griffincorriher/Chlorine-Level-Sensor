//Low level alarm at 60 gallons

// include the library code:
#include <LiquidCrystal.h>

#define ECHO 6 //Module pins
#define TRIG 7 
#define BUZZER 8 //Buzzer pin
#define LED 9 //LED pin
#define BUTTON 10 // button pin

// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

bool ack = false;
int oldButtonState = 0;
int buttonState = 0;
int lowLevel = 60; // Low level limit in gallons

void setup() { 
  buttonState = 0;
  Serial.begin(9600);  
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  // Print a message to the LCD.
  lcd.print("CL-1 Capacity");
  
  pinMode(TRIG, OUTPUT); // Initializing Trigger Output and Echo Input 
  pinMode(ECHO, INPUT_PULLUP);  
  pinMode(BUZZER,OUTPUT);
  pinMode(LED, OUTPUT);
  pinMode(BUTTON, INPUT);  

}

void loop() {
  // set the cursor to column 0, line 1
  // (note: line 1 is the second row, since counting begins with 0):
  lcd.setCursor(0, 1);

    digitalWrite(TRIG, LOW); // Set the trigger pin to low for 2uS 
    delayMicroseconds(2); 
    
    digitalWrite(TRIG, HIGH); // Send a 10uS high to trigger ranging 
    delayMicroseconds(20); 
    
    digitalWrite(TRIG, LOW); // Send pin low again 
    float distance = pulseIn(ECHO, HIGH,26000); // Read in times pulse 
    
    distance= distance/58; //Convert the pulse duration to distance
                           //You can add other math functions to calibrate it well
    distance= distance*0.3937; //Convert from cm to inches

    double gallons = distance*6.4; //Converts to gallons for CL-1 tank
  	int intGallons = (int)gallons;
  	checkLevel(intGallons); 
  	checkAck(oldButtonState, buttonState);
 	//Serial.println(intGallons);
     	
  delay(50);
}
 
void checkLevel (int intGallons){
  if (intGallons<lowLevel){
    if(ack != true){  //checks if acknowledged
    lcd.print("Low Level       ");     
    digitalWrite(BUZZER, HIGH);
  	digitalWrite(LED, HIGH);
	delay(500);
    digitalWrite(LED, LOW);
    delay(500);}
    
    else{
      lcd.print("Low Level - ACK ");
      digitalWrite(LED,HIGH);
      digitalWrite(BUZZER,LOW);
    }
  }

  if (intGallons>=lowLevel){
    lcd.print(intGallons);
    lcd.print(" Gallons        ");
    digitalWrite(BUZZER, LOW);
  	digitalWrite(LED,LOW);
    buttonState = 0;
    ack = false;
  	delay(1000);}
  }
   
bool checkAck(int oldButtonState, int buttonState){
  oldButtonState = digitalRead(BUTTON);
  if(buttonState != oldButtonState){
    buttonState = 1;
    ack = true;}
  return ack;}
